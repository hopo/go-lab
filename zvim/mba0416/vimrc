
" ============================
"  *** MacBookAir ***********
"  *** USER:HPMBA - vimrc ***
" ============================


"
" *** Pathogen
execute pathogen#infect()
filetype plugin on


"
" *** clang_complete find library
"let g:clang_library_path='/usr/lib/llvm-4.0/lib/libclang.so.1'


"
" *** YouCompleteMe set
"let g:ycm_global_ycm_extra_conf='/Users/hp/.vim/ycm_extra_conf.py'
"let g:ycm_server_python_interpreter='/usr/bin/python2'
"let g:ycm_confirm_extra_conf=0					" load ycm conf by default
"let g:ycm_cache_omnifunc=1						" don't cache completion items
"let g:ycm_collect_identifiers_from_tags_files=0	" turn on tag completion
"let g:ycm_complete_in_comments=1				" turn on completion in comments
"let g:ycm_show_diagnostics_ui=0
"let g:ycm_enable_diagnostic_signs=0				" left bar '>>'
"let g:ycm_enable_diagnostic_highlighting=1		" warning highlight
"let g:ycm_min_num_of_chars_for_completion=1		" start completion from the first character
"let g:ycm_seed_identifiers_with_syntax=0		" complete syntax keywords
"set completeopt-=preview


"
" *** ctrlp.vim
set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux

let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
let g:ctrlp_custom_ignore = {
	\ 'dir':  '\v[\/]\.(git|hg|svn)$',
	\ 'file': '\v\.(exe|so|dll)$',
	\ 'link': 'some_bad_symbolic_links',
	\ }


" 
" *** VIM Set
if has("syntax")
	syntax on
endif

set autoindent
set background=light	" Background color dark or light
set encoding=utf-8		" Encoding Type utf-8
set hlsearch			" Highlight search
set ignorecase			" Search case
set nocompatible		" Window size
set number
set ruler
set showcmd				" Show command in status line.
set title
set ts=4				" Tab 4


"
" *** Key mapping
let mapleader = "\<SPACE>"

noremap <LEADER>qq :q<CR>
noremap <LEADER>qQ :q!<CR>
noremap <LEADER>fs :up<CR>
noremap <LEADER>we :tabedit 
noremap <LEADER>wo :tabnext<CR>
noremap zk :wincmd k<CR>
noremap zl :wincmd l<CR>
noremap zh :wincmd h<CR>
noremap zj :wincmd j<CR>
noremap <LEADER>ft :VimFiler<CR>
noremap <F3> :NERDTreeToggle<CR>
noremap <F2> :TagbarToggle<CR>

inoremap <. <><LEFT>
inoremap </ </><LEFT>
inoremap (<CR> (<CR>)<ESC>O<TAB>
inoremap {<CR> {<CR>}<ESC>O<TAB>

