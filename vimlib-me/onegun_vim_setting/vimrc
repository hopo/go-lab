" All system-wide defaults are set in $VIMRUNTIME/debian.vim (usually just
" /usr/share/vim/vimcurrent/debian.vim) and sourced by the call to :runtime
" you can find below.  If you wish to change any of those settings, you should
" do it in this file (/etc/vim/vimrc), since debian.vim will be overwritten
" everytime an upgrade of the vim packages is performed.  It is recommended to
" make changes after sourcing debian.vim since it alters the value of the
" 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
"  filetype plugin indent on
"endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd		" Show (partial) command in status line.
"set showmatch		" Show matching brackets.
"set ignorecase		" Do case insensitive matching
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
"set hidden             " Hide buffers when they are abandoned
"set mouse=a		" Enable mouse usage (all modes)

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

"--------------------------------------------------"
" set private
"--------------------------------------------------"
set hlsearch   "add block to a word searched
set nu         "show number
syn on
 
set ts=8
set sw=4
set sts=4
 
"--------------------------------------------------"
" set basic variable
"--------------------------------------------------"
set cindent        "들여쓰기
set smartindent
set autoindent
set nowrap
set ff=unix
set bg=dark
set ruler
 
"--------------------------------------------------"
" set ctags database path
"--------------------------------------------------"
set tags+=./tags,../tags,../../tags,../../../tags,../../../../tags
set complete
 
"--------------------------------------------------"
" set cscope database path
"--------------------------------------------------"
set csprg=/usr/bin/cscope
set csto=0
set cst
set nocsverb
 
cs add /home/master/linux/cscope.out    /home/master/linux
set csverb
 
"--------------------------------------------------"
" set Tag List
"--------------------------------------------------"
filetype on
nmap <f12> :TlistToggle<cr>

filetype on
let Tlist_Ctags_Cmd="/usr/bin/ctags"
let Tlist_Inc_Winwidth=0
let Tlist_Exit_OnlyWindow = 1
let Tlist_Auto_Open=1
let Tlist_Use_Right_Window = 1
let Tlist_Auto_Update = 1
let Tlist_WinWidth = 35
let Tlist_Display_Prototype = 1
let Tlist_Show_Menu = 1
"--------------------------------------------------"
" set Source Explorer
"--------------------------------------------------"
nmap <f8> :SrcExplToggle<cr>
nmap <c-o> <c-w>h
nmap <c-l> <c-w>j
nmap <c-i> <c-w>k
nmap <c-p> <c-w>l
 
let g:SrcExpl_winHeight = 9
let g:SrcExpl_refreshTime = 100
let g:SrcExpl_jumpKey = "<enter>"
let g:SrcExpl_gobackKey = "<space>"
let g:SrcExpl_isUpdateTags = 0
 
"--------------------------------------------------"
" set NERD Tree
"--------------------------------------------------"
let NERDTreeWinPos = "left"
nmap <f9> :NERDTreeToggle<cr>
 
"--------------------------------------------------"
" vim option "
"--------------------------------------------------"
if &t_Co > 2 || has("gui_running")
    syntax on
"    colorscheme ko2
endif

"항상 편집하는 파일명 나오도록 함
set laststatus=2

"분할된 창간의 이동을 f3 키 하나로 가능하게 함.
map <F3> <c-w><c-w>

set hlsearch "검색어 강조 "set his
set mouse=c "마우스사용하기
set smartindent "스마트한 들여쓰기
set cindent "C프로그래밍용 자동들여쓰기

colorscheme  spectro "vi 색상태마를 evening로 지정


"--------------------------------------------------"
